{"ast":null,"code":"var _jsxFileName = \"/home/vivieb/provapollo/src/App.tsx\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport \"antd/dist/antd.css\";\nimport { Form, Radio, Button } from \"antd\";\nimport { Input } from \"antd\"; // type form = {\n//   name: string;\n//   code: string;\n//   title: string;\n//   description: string;\n//   flat: false;\n//   threshold: false;\n//   flexible: false;\n//   position: 0;\n//   reportOverride: false;\n//   workflowStatus: 0;\n// };\n\nconst App = () => {\n  const [dataForm, setDataForm] = useState({\n    groupId: 20128,\n    name: \"\",\n    code: \"\",\n    title: \"\",\n    description: \"\",\n    flat: false,\n    threshold: false,\n    flexible: false,\n    position: 0,\n    reportOverride: false,\n    workflowStatus: 0\n  }); //Query per prendere i dati dal database\n\n  const GET_PERIOD = gql`\n    query period {\n      periodTypes(scopeGroupId: 20124) {\n        items {\n          id\n          displayName\n        }\n      }\n    }\n  `; //Query per rimuovere i dati dal database\n\n  const REMOVE_PERIOD = gql`\n    mutation($siteGroupId: Long!, $periodTypeIds: String!) {\n      deletePeriodType(siteGroupId: $siteGroupId, periodTypeIds: $periodTypeIds)\n    }\n  `; //Query per aggiungere dati al Database\n\n  const ADD_PERIOD = gql`\n    mutation($periodType: InputPeriodType!) {\n      createPeriodType(periodType: $periodType) {\n        id\n        displayName\n      }\n    }\n  `;\n\n  function Hello() {\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_PERIOD, {\n      fetchPolicy: \"cache-and-network\",\n      variables: {}\n    });\n    console.log(data);\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Loading ...\");\n    return React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Hello\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, data.periodTypes.items.map(value => React.createElement(\"li\", {\n      key: value.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, value.displayName, React.createElement(Button, {\n      onClick: e => {\n        removePeriod({\n          variables: {\n            siteGroupId: 20128,\n            periodTypeIds: value.id\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Remove\"))), \"!\"));\n  }\n\n  const [removePeriod] = useMutation(REMOVE_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n  const [addTodo] = useMutation(ADD_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n  console.log(\"Questo Ã¨ il log della mutation\");\n  console.log(ADD_PERIOD); // const onChangeInput = (event: any) => {\n  //   console.log(event.target.name);\n  //   setDataForm({\n  //     ...dataForm,\n  //     [event.target.name]: event.target.value\n  //   });\n  // };\n\n  const onChange = () => {\n    localStorage.setItem(\"Summary\", JSON.stringify(dataForm));\n    console.log(JSON.stringify(dataForm));\n    addTodo({\n      variables: {\n        periodType: {\n          groupId: 20128,\n          name: dataForm.name,\n          code: dataForm.code,\n          title: JSON.stringify({\n            en_US: dataForm.title\n          }),\n          description: JSON.stringify({\n            en_US: dataForm.description\n          }),\n          flat: dataForm.flat,\n          threshold: dataForm.threshold,\n          flexible: dataForm.flexible,\n          position: 0,\n          reportOverride: false,\n          workflowStatus: 0\n        }\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"src/App.tsx\"), \" and save to reload.\"), React.createElement(Hello, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Name: \"), React.createElement(Input, {\n    name: \"name\",\n    value: dataForm.name,\n    onChange: event => {\n      setDataForm({ ...dataForm,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Code:\"), React.createElement(Input, {\n    name: \"code\",\n    value: dataForm.code,\n    onChange: event => {\n      console.log(dataForm.name);\n      setDataForm({ ...dataForm,\n        code: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Title: \"), React.createElement(Input, {\n    name: \"title\",\n    value: dataForm.title,\n    onChange: event => {\n      setDataForm({ ...dataForm,\n        title: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"description: \"), React.createElement(Input, {\n    name: \"description\",\n    value: dataForm.description,\n    onChange: event => {\n      setDataForm({ ...dataForm,\n        description: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"flat: \"), React.createElement(Radio, {\n    value: dataForm.flat,\n    name: \"flat\",\n    defaultChecked: false,\n    onChange: value => {\n      setDataForm({ ...dataForm,\n        flat: value.target.checked\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"threshold \"), React.createElement(Radio, {\n    name: \"threshold\",\n    defaultChecked: false,\n    value: dataForm.threshold,\n    onChange: value => {\n      setDataForm({ ...dataForm,\n        threshold: value.target.checked\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"flexible \"), React.createElement(Radio, {\n    name: \"flexible\",\n    value: dataForm.flexible,\n    defaultChecked: false,\n    onChange: value => {\n      setDataForm({ ...dataForm,\n        flexible: value.target.checked\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    onClick: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Primary\")), React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Learn React\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/vivieb/provapollo/src/App.tsx"],"names":["React","useState","useQuery","useMutation","gql","Form","Radio","Button","Input","App","dataForm","setDataForm","groupId","name","code","title","description","flat","threshold","flexible","position","reportOverride","workflowStatus","GET_PERIOD","REMOVE_PERIOD","ADD_PERIOD","Hello","loading","error","data","fetchPolicy","variables","console","log","periodTypes","items","map","value","id","displayName","e","removePeriod","siteGroupId","periodTypeIds","refetchQueries","addTodo","onChange","localStorage","setItem","JSON","stringify","periodType","en_US","logo","event","target","checked"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport \"antd/dist/antd.css\";\nimport { Form, Radio, Button } from \"antd\";\nimport { Input } from \"antd\";\n\n// type form = {\n//   name: string;\n//   code: string;\n//   title: string;\n//   description: string;\n//   flat: false;\n//   threshold: false;\n//   flexible: false;\n//   position: 0;\n//   reportOverride: false;\n//   workflowStatus: 0;\n// };\n\nconst App = () => {\n  const [dataForm, setDataForm] = useState({\n    groupId: 20128,\n    name: \"\",\n    code: \"\",\n    title: \"\",\n    description: \"\",\n    flat: false,\n    threshold: false,\n    flexible: false,\n    position: 0,\n    reportOverride: false,\n    workflowStatus: 0\n  });\n\n  //Query per prendere i dati dal database\n  const GET_PERIOD = gql`\n    query period {\n      periodTypes(scopeGroupId: 20124) {\n        items {\n          id\n          displayName\n        }\n      }\n    }\n  `;\n\n  //Query per rimuovere i dati dal database\n  const REMOVE_PERIOD = gql`\n    mutation($siteGroupId: Long!, $periodTypeIds: String!) {\n      deletePeriodType(siteGroupId: $siteGroupId, periodTypeIds: $periodTypeIds)\n    }\n  `;\n  //Query per aggiungere dati al Database\n  const ADD_PERIOD = gql`\n    mutation($periodType: InputPeriodType!) {\n      createPeriodType(periodType: $periodType) {\n        id\n        displayName\n      }\n    }\n  `;\n\n  function Hello() {\n    const { loading, error, data } = useQuery(GET_PERIOD, {\n      fetchPolicy: \"cache-and-network\",\n      variables: {}\n    });\n    console.log(data);\n    if (loading) return <p>Loading ...</p>;\n    return (\n      <h3>\n        Hello\n        <ul>\n          {data.periodTypes.items.map((value: any) => (\n            <li key={value.id}>\n              {value.displayName}\n              <Button\n                onClick={(e: any) => {\n                  removePeriod({\n                    variables: {\n                      siteGroupId: 20128,\n                      periodTypeIds: value.id\n                    }\n                  });\n                }}\n              >\n                Remove\n              </Button>\n            </li>\n          ))}\n          !\n        </ul>\n      </h3>\n    );\n  }\n\n  const [removePeriod] = useMutation(REMOVE_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n  const [addTodo] = useMutation(ADD_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n  console.log(\"Questo Ã¨ il log della mutation\");\n  console.log(ADD_PERIOD);\n\n  // const onChangeInput = (event: any) => {\n  //   console.log(event.target.name);\n  //   setDataForm({\n  //     ...dataForm,\n  //     [event.target.name]: event.target.value\n  //   });\n  // };\n\n  const onChange = () => {\n    localStorage.setItem(\"Summary\", JSON.stringify(dataForm));\n    console.log(JSON.stringify(dataForm));\n    addTodo({\n      variables: {\n        periodType: {\n          groupId: 20128,\n          name: dataForm.name,\n          code: dataForm.code,\n          title: JSON.stringify({ en_US: dataForm.title }),\n          description: JSON.stringify({ en_US: dataForm.description }),\n          flat: dataForm.flat,\n          threshold: dataForm.threshold,\n          flexible: dataForm.flexible,\n          position: 0,\n          reportOverride: false,\n          workflowStatus: 0\n        }\n      }\n    });\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <Hello></Hello>\n\n        <Form>\n          <label>Name: </label>\n          <Input\n            name=\"name\"\n            value={dataForm.name}\n            onChange={(event: any) => {\n              setDataForm({\n                ...dataForm,\n                name: event.target.value\n              });\n            }}\n          ></Input>\n          <br></br>\n          <label>Code:</label>\n          <Input\n            name=\"code\"\n            value={dataForm.code}\n            onChange={(event: any) => {\n              console.log(dataForm.name);\n              setDataForm({\n                ...dataForm,\n                code: event.target.value\n              });\n            }}\n          ></Input>\n          <br></br>\n          <label>Title: </label>\n          <Input\n            name=\"title\"\n            value={dataForm.title}\n            onChange={(event: any) => {\n              setDataForm({\n                ...dataForm,\n                title: event.target.value\n              });\n            }}\n          ></Input>\n          <br></br>\n          <label>description: </label>\n          <Input\n            name=\"description\"\n            value={dataForm.description}\n            onChange={(event: any) => {\n              setDataForm({\n                ...dataForm,\n                description: event.target.value\n              });\n            }}\n          ></Input>\n          <br></br>\n          <label>flat: </label>\n          <Radio\n            value={dataForm.flat}\n            name=\"flat\"\n            defaultChecked={false}\n            onChange={(value: any) => {\n              setDataForm({\n                ...dataForm,\n                flat: value.target.checked\n              });\n            }}\n          ></Radio>\n          <br></br>\n          <label>threshold </label>\n          <Radio\n            name=\"threshold\"\n            defaultChecked={false}\n            value={dataForm.threshold}\n            onChange={(value: any) => {\n              setDataForm({\n                ...dataForm,\n                threshold: value.target.checked\n              });\n            }}\n          ></Radio>\n          <br></br>\n          <label>flexible </label>\n          <Radio\n            name=\"flexible\"\n            value={dataForm.flexible}\n            defaultChecked={false}\n            onChange={(value: any) => {\n              setDataForm({\n                ...dataForm,\n                flexible: value.target.checked\n              });\n            }}\n          ></Radio>\n          <br></br>\n          <br></br>\n          <Button type=\"primary\" onClick={onChange}>\n            Primary\n          </Button>\n        </Form>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}