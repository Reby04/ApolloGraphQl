{"ast":null,"code":"var _jsxFileName = \"/home/vivieb/provapollo/src/App.tsx\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport \"antd/dist/antd.css\";\nimport { Form, Radio, Button } from \"antd\";\nimport { Input } from \"antd\"; //Query per prendere i dati dal database\n\nconst GET_PERIOD = gql`\n  query period {\n    periodTypes(scopeGroupId: 20124) {\n      items {\n        id\n        displayName\n      }\n    }\n  }\n`; //Query per rimuovere i dati dal database\n\nconst REMOVE_PERIOD = gql`\n  mutation($siteGroupId: Long!, $periodTypeIds: String!) {\n    deletePeriodType(siteGroupId: $siteGroupId, periodTypeIds: $periodTypeIds)\n  }\n`; //Query per aggiungere dati al Database\n\nconst ADD_PERIOD = gql`\n  mutation($periodType: InputPeriodType!) {\n    createPeriodType(periodType: $periodType) {\n      id\n      displayName\n    }\n  }\n`;\n\nconst App = () => {\n  const [dataForm, setDataForm] = useState({\n    groupId: 20128,\n    name: \"\",\n    code: \"\",\n    title: \"\",\n    description: \"\",\n    flat: false,\n    threshold: false,\n    flexible: false,\n    position: 0,\n    reportOverride: false,\n    workflowStatus: 0\n  });\n  const [data] = useQuery(GET_PERIOD, {\n    //Quando si aggiunge o si elimina un elemento il fetchPolicy serve ad aggiornare automaticamente la pagina\n    fetchPolicy: \"cache-and-network\"\n  });\n  const [getPeriod] = useQuery(GET_PERIOD, {\n    //Quando si aggiunge o si elimina un elemento il fetchPolicy serve ad aggiornare automaticamente la pagina\n    fetchPolicy: \"cache-and-network\"\n  });\n  const [removePeriod] = useMutation(REMOVE_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n  const [addTodo] = useMutation(ADD_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n  console.log(\"Questo Ã¨ il log della mutation\");\n  console.log(ADD_PERIOD); // const onChangeInput = (event: any) => {\n  //   console.log(event.target.name);\n  //   setDataForm({\n  //     ...dataForm,\n  //     [event.target.name]: event.target.value\n  //   });\n  // };\n\n  const onChange = () => {\n    localStorage.setItem(\"Summary\", JSON.stringify(dataForm));\n    console.log(JSON.stringify(dataForm));\n    addTodo({\n      variables: {\n        periodType: {\n          groupId: 20128,\n          name: dataForm.name,\n          code: dataForm.code,\n          title: JSON.stringify({\n            en_US: dataForm.title\n          }),\n          description: JSON.stringify({\n            en_US: dataForm.description\n          }),\n          flat: dataForm.flat,\n          threshold: dataForm.threshold,\n          flexible: dataForm.flexible,\n          position: 0,\n          reportOverride: false,\n          workflowStatus: 0\n        }\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"src/App.tsx\"), \" and save to reload.\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Hello\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, data.periodTypes.items.map(value => React.createElement(\"li\", {\n    key: value.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, value.displayName, React.createElement(Button, {\n    onClick: e => {\n      removePeriod({\n        variables: {\n          siteGroupId: 20128,\n          periodTypeIds: value.id\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Remove\"))))), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Name: \"), React.createElement(Input, {\n    name: \"name\",\n    value: dataForm.name,\n    onChange: event => {\n      setDataForm({ ...dataForm,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Code:\"), React.createElement(Input, {\n    name: \"code\",\n    value: dataForm.code,\n    onChange: event => {\n      console.log(dataForm.name);\n      setDataForm({ ...dataForm,\n        code: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Title: \"), React.createElement(Input, {\n    name: \"title\",\n    value: dataForm.title,\n    onChange: event => {\n      setDataForm({ ...dataForm,\n        title: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"description: \"), React.createElement(Input, {\n    name: \"description\",\n    value: dataForm.description,\n    onChange: event => {\n      setDataForm({ ...dataForm,\n        description: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"flat: \"), React.createElement(Radio, {\n    value: dataForm.flat,\n    name: \"flat\",\n    defaultChecked: false,\n    onChange: value => {\n      setDataForm({ ...dataForm,\n        flat: value.target.checked\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"threshold \"), React.createElement(Radio, {\n    name: \"threshold\",\n    defaultChecked: false,\n    value: dataForm.threshold,\n    onChange: value => {\n      setDataForm({ ...dataForm,\n        threshold: value.target.checked\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"flexible \"), React.createElement(Radio, {\n    name: \"flexible\",\n    value: dataForm.flexible,\n    defaultChecked: false,\n    onChange: value => {\n      setDataForm({ ...dataForm,\n        flexible: value.target.checked\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    onClick: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Primary\")), React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Learn React\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/vivieb/provapollo/src/App.tsx"],"names":["React","useState","useQuery","useMutation","gql","Form","Radio","Button","Input","GET_PERIOD","REMOVE_PERIOD","ADD_PERIOD","App","dataForm","setDataForm","groupId","name","code","title","description","flat","threshold","flexible","position","reportOverride","workflowStatus","data","fetchPolicy","getPeriod","removePeriod","refetchQueries","addTodo","console","log","onChange","localStorage","setItem","JSON","stringify","variables","periodType","en_US","logo","periodTypes","items","map","value","id","displayName","e","siteGroupId","periodTypeIds","event","target","checked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,KAAT,QAAsB,MAAtB,C,CAEA;;AACA,MAAMC,UAAU,GAAGL,GAAI;;;;;;;;;CAAvB,C,CAWA;;AACA,MAAMM,aAAa,GAAGN,GAAI;;;;CAA1B,C,CAKA;;AACA,MAAMO,UAAU,GAAGP,GAAI;;;;;;;CAAvB;;AASA,MAAMQ,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACvCc,IAAAA,OAAO,EAAE,KAD8B;AAEvCC,IAAAA,IAAI,EAAE,EAFiC;AAGvCC,IAAAA,IAAI,EAAE,EAHiC;AAIvCC,IAAAA,KAAK,EAAE,EAJgC;AAKvCC,IAAAA,WAAW,EAAE,EAL0B;AAMvCC,IAAAA,IAAI,EAAE,KANiC;AAOvCC,IAAAA,SAAS,EAAE,KAP4B;AAQvCC,IAAAA,QAAQ,EAAE,KAR6B;AASvCC,IAAAA,QAAQ,EAAE,CAT6B;AAUvCC,IAAAA,cAAc,EAAE,KAVuB;AAWvCC,IAAAA,cAAc,EAAE;AAXuB,GAAD,CAAxC;AAcA,QAAM,CAACC,IAAD,IAASxB,QAAQ,CAACO,UAAD,EAAa;AAClC;AACAkB,IAAAA,WAAW,EAAE;AAFqB,GAAb,CAAvB;AAKA,QAAM,CAACC,SAAD,IAAc1B,QAAQ,CAACO,UAAD,EAAa;AACvC;AACAkB,IAAAA,WAAW,EAAE;AAF0B,GAAb,CAA5B;AAKA,QAAM,CAACE,YAAD,IAAiB1B,WAAW,CAACO,aAAD,EAAgB;AAChDoB,IAAAA,cAAc,EAAE,CAAC,QAAD;AADgC,GAAhB,CAAlC;AAGA,QAAM,CAACC,OAAD,IAAY5B,WAAW,CAACQ,UAAD,EAAa;AACxCmB,IAAAA,cAAc,EAAE,CAAC,QAAD;AADwB,GAAb,CAA7B;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYtB,UAAZ,EAhCgB,CAkChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMuB,QAAQ,GAAG,MAAM;AACrBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAezB,QAAf,CAAhC;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,SAAL,CAAezB,QAAf,CAAZ;AACAkB,IAAAA,OAAO,CAAC;AACNQ,MAAAA,SAAS,EAAE;AACTC,QAAAA,UAAU,EAAE;AACVzB,UAAAA,OAAO,EAAE,KADC;AAEVC,UAAAA,IAAI,EAAEH,QAAQ,CAACG,IAFL;AAGVC,UAAAA,IAAI,EAAEJ,QAAQ,CAACI,IAHL;AAIVC,UAAAA,KAAK,EAAEmB,IAAI,CAACC,SAAL,CAAe;AAAEG,YAAAA,KAAK,EAAE5B,QAAQ,CAACK;AAAlB,WAAf,CAJG;AAKVC,UAAAA,WAAW,EAAEkB,IAAI,CAACC,SAAL,CAAe;AAAEG,YAAAA,KAAK,EAAE5B,QAAQ,CAACM;AAAlB,WAAf,CALH;AAMVC,UAAAA,IAAI,EAAEP,QAAQ,CAACO,IANL;AAOVC,UAAAA,SAAS,EAAER,QAAQ,CAACQ,SAPV;AAQVC,UAAAA,QAAQ,EAAET,QAAQ,CAACS,QART;AASVC,UAAAA,QAAQ,EAAE,CATA;AAUVC,UAAAA,cAAc,EAAE,KAVN;AAWVC,UAAAA,cAAc,EAAE;AAXN;AADH;AADL,KAAD,CAAP;AAiBD,GApBD;;AAqBA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEiB,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADP,yBAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,IAAI,CAACiB,WAAL,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA4BC,KAAD,IAC1B;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,WADT,EAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAGC,CAAD,IAAY;AACnBpB,MAAAA,YAAY,CAAC;AACXU,QAAAA,SAAS,EAAE;AACTW,UAAAA,WAAW,EAAE,KADJ;AAETC,UAAAA,aAAa,EAAEL,KAAK,CAACC;AAFZ;AADA,OAAD,CAAZ;AAMD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADD,CADH,CAFF,CALF,EA4BE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAElC,QAAQ,CAACG,IAFlB;AAGE,IAAA,QAAQ,EAAGoC,KAAD,IAAgB;AACxBtC,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVG,QAAAA,IAAI,EAAEoC,KAAK,CAACC,MAAN,CAAaP;AAFT,OAAD,CAAX;AAID,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,EAcE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEjC,QAAQ,CAACI,IAFlB;AAGE,IAAA,QAAQ,EAAGmC,KAAD,IAAgB;AACxBpB,MAAAA,OAAO,CAACC,GAAR,CAAYpB,QAAQ,CAACG,IAArB;AACAF,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVI,QAAAA,IAAI,EAAEmC,KAAK,CAACC,MAAN,CAAaP;AAFT,OAAD,CAAX;AAID,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA1BF,EA2BE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEjC,QAAQ,CAACK,KAFlB;AAGE,IAAA,QAAQ,EAAGkC,KAAD,IAAgB;AACxBtC,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVK,QAAAA,KAAK,EAAEkC,KAAK,CAACC,MAAN,CAAaP;AAFV,OAAD,CAAX;AAID,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAtCF,EAuCE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,KAAK,EAAEjC,QAAQ,CAACM,WAFlB;AAGE,IAAA,QAAQ,EAAGiC,KAAD,IAAgB;AACxBtC,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVM,QAAAA,WAAW,EAAEiC,KAAK,CAACC,MAAN,CAAaP;AAFhB,OAAD,CAAX;AAID,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,EAiDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,EAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlDF,EAmDE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEjC,QAAQ,CAACO,IADlB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,cAAc,EAAE,KAHlB;AAIE,IAAA,QAAQ,EAAG0B,KAAD,IAAgB;AACxBhC,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVO,QAAAA,IAAI,EAAE0B,KAAK,CAACO,MAAN,CAAaC;AAFT,OAAD,CAAX;AAID,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnDF,EA8DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9DF,EA+DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/DF,EAgEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,cAAc,EAAE,KAFlB;AAGE,IAAA,KAAK,EAAEzC,QAAQ,CAACQ,SAHlB;AAIE,IAAA,QAAQ,EAAGyB,KAAD,IAAgB;AACxBhC,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVQ,QAAAA,SAAS,EAAEyB,KAAK,CAACO,MAAN,CAAaC;AAFd,OAAD,CAAX;AAID,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhEF,EA2EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3EF,EA4EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA5EF,EA6EE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAEzC,QAAQ,CAACS,QAFlB;AAGE,IAAA,cAAc,EAAE,KAHlB;AAIE,IAAA,QAAQ,EAAGwB,KAAD,IAAgB;AACxBhC,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVS,QAAAA,QAAQ,EAAEwB,KAAK,CAACO,MAAN,CAAaC;AAFb,OAAD,CAAX;AAID,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7EF,EAwFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxFF,EAyFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzFF,EA0FE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEpB,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA1FF,CA5BF,EA0HE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1HF,CADF,CADF;AAuID,CAtMD;;AAwMA,eAAetB,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport \"antd/dist/antd.css\";\nimport { Form, Radio, Button } from \"antd\";\nimport { Input } from \"antd\";\n\n//Query per prendere i dati dal database\nconst GET_PERIOD = gql`\n  query period {\n    periodTypes(scopeGroupId: 20124) {\n      items {\n        id\n        displayName\n      }\n    }\n  }\n`;\n\n//Query per rimuovere i dati dal database\nconst REMOVE_PERIOD = gql`\n  mutation($siteGroupId: Long!, $periodTypeIds: String!) {\n    deletePeriodType(siteGroupId: $siteGroupId, periodTypeIds: $periodTypeIds)\n  }\n`;\n//Query per aggiungere dati al Database\nconst ADD_PERIOD = gql`\n  mutation($periodType: InputPeriodType!) {\n    createPeriodType(periodType: $periodType) {\n      id\n      displayName\n    }\n  }\n`;\n\nconst App = () => {\n  const [dataForm, setDataForm] = useState({\n    groupId: 20128,\n    name: \"\",\n    code: \"\",\n    title: \"\",\n    description: \"\",\n    flat: false,\n    threshold: false,\n    flexible: false,\n    position: 0,\n    reportOverride: false,\n    workflowStatus: 0\n  });\n\n  const [data] = useQuery(GET_PERIOD, {\n    //Quando si aggiunge o si elimina un elemento il fetchPolicy serve ad aggiornare automaticamente la pagina\n    fetchPolicy: \"cache-and-network\"\n  });\n\n  const [getPeriod] = useQuery(GET_PERIOD, {\n    //Quando si aggiunge o si elimina un elemento il fetchPolicy serve ad aggiornare automaticamente la pagina\n    fetchPolicy: \"cache-and-network\"\n  });\n\n  const [removePeriod] = useMutation(REMOVE_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n  const [addTodo] = useMutation(ADD_PERIOD, {\n    refetchQueries: [\"period\"]\n  });\n  console.log(\"Questo Ã¨ il log della mutation\");\n  console.log(ADD_PERIOD);\n\n  // const onChangeInput = (event: any) => {\n  //   console.log(event.target.name);\n  //   setDataForm({\n  //     ...dataForm,\n  //     [event.target.name]: event.target.value\n  //   });\n  // };\n\n  const onChange = () => {\n    localStorage.setItem(\"Summary\", JSON.stringify(dataForm));\n    console.log(JSON.stringify(dataForm));\n    addTodo({\n      variables: {\n        periodType: {\n          groupId: 20128,\n          name: dataForm.name,\n          code: dataForm.code,\n          title: JSON.stringify({ en_US: dataForm.title }),\n          description: JSON.stringify({ en_US: dataForm.description }),\n          flat: dataForm.flat,\n          threshold: dataForm.threshold,\n          flexible: dataForm.flexible,\n          position: 0,\n          reportOverride: false,\n          workflowStatus: 0\n        }\n      }\n    });\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <h3>\n          Hello\n          <ul>\n            {data.periodTypes.items.map((value: any) => (\n              <li key={value.id}>\n                {value.displayName}\n                <Button\n                  onClick={(e: any) => {\n                    removePeriod({\n                      variables: {\n                        siteGroupId: 20128,\n                        periodTypeIds: value.id\n                      }\n                    });\n                  }}\n                >\n                  Remove\n                </Button>\n              </li>\n            ))}\n          </ul>\n        </h3>\n\n        <Form>\n          <label>Name: </label>\n          <Input\n            name=\"name\"\n            value={dataForm.name}\n            onChange={(event: any) => {\n              setDataForm({\n                ...dataForm,\n                name: event.target.value\n              });\n            }}\n          ></Input>\n          <br></br>\n          <label>Code:</label>\n          <Input\n            name=\"code\"\n            value={dataForm.code}\n            onChange={(event: any) => {\n              console.log(dataForm.name);\n              setDataForm({\n                ...dataForm,\n                code: event.target.value\n              });\n            }}\n          ></Input>\n          <br></br>\n          <label>Title: </label>\n          <Input\n            name=\"title\"\n            value={dataForm.title}\n            onChange={(event: any) => {\n              setDataForm({\n                ...dataForm,\n                title: event.target.value\n              });\n            }}\n          ></Input>\n          <br></br>\n          <label>description: </label>\n          <Input\n            name=\"description\"\n            value={dataForm.description}\n            onChange={(event: any) => {\n              setDataForm({\n                ...dataForm,\n                description: event.target.value\n              });\n            }}\n          ></Input>\n          <br></br>\n          <label>flat: </label>\n          <Radio\n            value={dataForm.flat}\n            name=\"flat\"\n            defaultChecked={false}\n            onChange={(value: any) => {\n              setDataForm({\n                ...dataForm,\n                flat: value.target.checked\n              });\n            }}\n          ></Radio>\n          <br></br>\n          <label>threshold </label>\n          <Radio\n            name=\"threshold\"\n            defaultChecked={false}\n            value={dataForm.threshold}\n            onChange={(value: any) => {\n              setDataForm({\n                ...dataForm,\n                threshold: value.target.checked\n              });\n            }}\n          ></Radio>\n          <br></br>\n          <label>flexible </label>\n          <Radio\n            name=\"flexible\"\n            value={dataForm.flexible}\n            defaultChecked={false}\n            onChange={(value: any) => {\n              setDataForm({\n                ...dataForm,\n                flexible: value.target.checked\n              });\n            }}\n          ></Radio>\n          <br></br>\n          <br></br>\n          <Button type=\"primary\" onClick={onChange}>\n            Primary\n          </Button>\n        </Form>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}